openapi: 3.0.3
info:
  title: Med API Project
  version: 1.0.0
  description: A sample med to learn develop DRF
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/dj-rest-auth/login/:
    post:
      operationId: v1_dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/dj-rest-auth/logout/:
    post:
      operationId: v1_dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/change/:
    post:
      operationId: v1_dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/reset/:
    post:
      operationId: v1_dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: v1_dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/registration/:
    post:
      operationId: v1_dj_rest_auth_registration_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/dj-rest-auth/registration/resend-email/:
    post:
      operationId: v1_dj_rest_auth_registration_resend_email_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/registration/verify-email/:
    post:
      operationId: v1_dj_rest_auth_registration_verify_email_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/user/:
    get:
      operationId: v1_dj_rest_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: v1_dj_rest_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: v1_dj_rest_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/v1/doctors/:
    get:
      operationId: v1_doctors_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorsList'
          description: ''
    post:
      operationId: v1_doctors_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctors'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Doctors'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Doctors'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctors'
          description: ''
  /api/v1/doctors/{id}/:
    get:
      operationId: v1_doctors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this doctor.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctors'
          description: ''
    put:
      operationId: v1_doctors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this doctor.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctors'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Doctors'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Doctors'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctors'
          description: ''
    patch:
      operationId: v1_doctors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this doctor.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDoctors'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDoctors'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDoctors'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctors'
          description: ''
    delete:
      operationId: v1_doctors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this doctor.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/patients/:
    get:
      operationId: v1_patients_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientsList'
          description: ''
    post:
      operationId: v1_patients_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patients'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
          description: ''
  /api/v1/patients/{id}/:
    get:
      operationId: v1_patients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patient.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
          description: ''
    put:
      operationId: v1_patients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patient.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patients'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
          description: ''
    patch:
      operationId: v1_patients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patient.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatients'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatients'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatients'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
          description: ''
    delete:
      operationId: v1_patients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this patient.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/services/:
    get:
      operationId: v1_services_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServicesList'
          description: ''
    post:
      operationId: v1_services_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Services'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Services'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Services'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
  /api/v1/services-categories/:
    get:
      operationId: v1_services_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServicesCategoriesList'
          description: ''
    post:
      operationId: v1_services_categories_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCategories'
          description: ''
  /api/v1/services-categories/{id}/:
    get:
      operationId: v1_services_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services category.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCategories'
          description: ''
    put:
      operationId: v1_services_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServicesCategories'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCategories'
          description: ''
    patch:
      operationId: v1_services_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServicesCategories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServicesCategories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServicesCategories'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCategories'
          description: ''
    delete:
      operationId: v1_services_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this services category.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/services/{id}/:
    get:
      operationId: v1_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    put:
      operationId: v1_services_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Services'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Services'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Services'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    patch:
      operationId: v1_services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServices'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServices'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServices'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: ''
    delete:
      operationId: v1_services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/specializations/:
    get:
      operationId: v1_specializations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecializationsList'
          description: ''
    post:
      operationId: v1_specializations_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specializations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Specializations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Specializations'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specializations'
          description: ''
  /api/v1/specializations/{id}/:
    get:
      operationId: v1_specializations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this specialization.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specializations'
          description: ''
    put:
      operationId: v1_specializations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this specialization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specializations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Specializations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Specializations'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specializations'
          description: ''
    patch:
      operationId: v1_specializations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this specialization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecializations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSpecializations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSpecializations'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specializations'
          description: ''
    delete:
      operationId: v1_specializations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this specialization.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/staffs/:
    get:
      operationId: v1_staffs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffsList'
          description: ''
    post:
      operationId: v1_staffs_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staffs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staffs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staffs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staffs'
          description: ''
  /api/v1/staffs-roles/:
    get:
      operationId: v1_staffs_roles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffsRolesList'
          description: ''
    post:
      operationId: v1_staffs_roles_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffsRoles'
          description: ''
  /api/v1/staffs-roles/{id}/:
    get:
      operationId: v1_staffs_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staffs role.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffsRoles'
          description: ''
    put:
      operationId: v1_staffs_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staffs role.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffsRoles'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffsRoles'
          description: ''
    patch:
      operationId: v1_staffs_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staffs role.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffsRoles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffsRoles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffsRoles'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffsRoles'
          description: ''
    delete:
      operationId: v1_staffs_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staffs role.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/staffs/{id}/:
    get:
      operationId: v1_staffs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sraff.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staffs'
          description: ''
    put:
      operationId: v1_staffs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sraff.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staffs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staffs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staffs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staffs'
          description: ''
    patch:
      operationId: v1_staffs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sraff.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffs'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staffs'
          description: ''
    delete:
      operationId: v1_staffs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sraff.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: v1_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/visits/:
    get:
      operationId: v1_visits_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVisitsList'
          description: ''
    post:
      operationId: v1_visits_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visits'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visits'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visits'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visits'
          description: ''
  /api/v1/visits/{id}/:
    get:
      operationId: v1_visits_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visits'
          description: ''
    put:
      operationId: v1_visits_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visits'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visits'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visits'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visits'
          description: ''
    patch:
      operationId: v1_visits_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVisits'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVisits'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVisits'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visits'
          description: ''
    delete:
      operationId: v1_visits_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Doctors:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        contact_number:
          type: string
          nullable: true
          title: Contact Number (optional)
          maxLength: 13
        password:
          type: string
          maxLength: 20
        confirm_password:
          type: string
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
          title: Date of birth (optional)
        experience_in_year:
          type: integer
          nullable: true
          title: Experience in Year (optional)
        gender:
          $ref: '#/components/schemas/GenderEnum'
        profile_picture:
          type: string
          format: uri
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        status:
          type: boolean
        address1:
          type: string
          nullable: true
          title: Address 1 (optional)
          maxLength: 150
        address2:
          type: string
          nullable: true
          title: Address 2 (optional)
          maxLength: 150
        country:
          nullable: true
          title: Country (optional)
          oneOf:
          - $ref: '#/components/schemas/DoctorsCountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        state:
          type: string
          nullable: true
          title: State (optional)
          maxLength: 50
        city:
          type: string
          nullable: true
          title: City (optional)
          maxLength: 50
        postal_code:
          type: integer
          nullable: true
          title: Postal Code (optional)
        specialization:
          type: integer
      required:
      - confirm_password
      - email
      - first_name
      - gender
      - id
      - last_name
      - password
      - profile_picture
      - specialization
    DoctorsCountryEnum:
      enum:
      - Uzbekistan
      - Karakalpakistan
      - Kazakhstan
      - Russia
      type: string
      description: |-
        * `Uzbekistan` - Uzbekistan
        * `Karakalpakistan` - Karakalpakistan
        * `Kazakhstan` - Kazakhstan
        * `Russia` - Russia
    GenderEnum:
      enum:
      - Male
      - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    NullEnum:
      enum:
      - null
    PaginatedDoctorsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Doctors'
    PaginatedPatientsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Patients'
    PaginatedServicesCategoriesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServicesCategories'
    PaginatedServicesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Services'
    PaginatedSpecializationsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Specializations'
    PaginatedStaffsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Staffs'
    PaginatedStaffsRolesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffsRoles'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVisitsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Visits'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDoctors:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        contact_number:
          type: string
          nullable: true
          title: Contact Number (optional)
          maxLength: 13
        password:
          type: string
          maxLength: 20
        confirm_password:
          type: string
          maxLength: 20
        dob:
          type: string
          format: date
          nullable: true
          title: Date of birth (optional)
        experience_in_year:
          type: integer
          nullable: true
          title: Experience in Year (optional)
        gender:
          $ref: '#/components/schemas/GenderEnum'
        profile_picture:
          type: string
          format: uri
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        status:
          type: boolean
        address1:
          type: string
          nullable: true
          title: Address 1 (optional)
          maxLength: 150
        address2:
          type: string
          nullable: true
          title: Address 2 (optional)
          maxLength: 150
        country:
          nullable: true
          title: Country (optional)
          oneOf:
          - $ref: '#/components/schemas/DoctorsCountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        state:
          type: string
          nullable: true
          title: State (optional)
          maxLength: 50
        city:
          type: string
          nullable: true
          title: City (optional)
          maxLength: 50
        postal_code:
          type: integer
          nullable: true
          title: Postal Code (optional)
        specialization:
          type: integer
    PatchedPatients:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        unique_id:
          type: string
          format: uuid
          readOnly: true
          title: Patient Unique ID
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 20
        confirm_password:
          type: string
          maxLength: 20
        contact_number:
          type: string
          title: Contact number (optional)
          maxLength: 13
        gender:
          $ref: '#/components/schemas/GenderEnum'
        dob:
          type: string
          format: date
          title: Date of birth (optional)
        profile_picture:
          type: string
          format: uri
        address1:
          type: string
          nullable: true
          title: Address 1 (optional)
          maxLength: 150
        address2:
          type: string
          nullable: true
          title: Address 2 (optional)
          maxLength: 150
        country:
          nullable: true
          title: Country (optional)
          oneOf:
          - $ref: '#/components/schemas/PatientsCountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        state:
          type: string
          nullable: true
          title: State (optional)
          maxLength: 50
        city:
          type: string
          nullable: true
          title: City (optional)
          maxLength: 50
        postal_code:
          type: integer
          nullable: true
          title: Postal Code (optional)
    PatchedServices:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of the service
          maxLength: 50
        short_description:
          type: string
        icon:
          type: string
          format: uri
        status:
          type: boolean
        category:
          type: integer
        doctors:
          type: integer
    PatchedServicesCategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of the category of the service
          maxLength: 100
    PatchedSpecializations:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedStaffs:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        contact_number:
          type: string
          nullable: true
          title: Contact Number (optional)
          maxLength: 13
        password:
          type: string
          nullable: true
          maxLength: 20
        confirm_password:
          type: string
          nullable: true
          title: Confirm Pasword
          maxLength: 20
        gender:
          $ref: '#/components/schemas/GenderEnum'
        profile_picture:
          type: string
          format: uri
        role:
          type: integer
    PatchedStaffsRoles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Staff Role
          maxLength: 50
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedVisits:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        visit_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
          title: Description (optional)
        doctor:
          type: integer
        patient:
          type: integer
    Patients:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        unique_id:
          type: string
          format: uuid
          readOnly: true
          title: Patient Unique ID
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 20
        confirm_password:
          type: string
          maxLength: 20
        contact_number:
          type: string
          title: Contact number (optional)
          maxLength: 13
        gender:
          $ref: '#/components/schemas/GenderEnum'
        dob:
          type: string
          format: date
          title: Date of birth (optional)
        profile_picture:
          type: string
          format: uri
        address1:
          type: string
          nullable: true
          title: Address 1 (optional)
          maxLength: 150
        address2:
          type: string
          nullable: true
          title: Address 2 (optional)
          maxLength: 150
        country:
          nullable: true
          title: Country (optional)
          oneOf:
          - $ref: '#/components/schemas/PatientsCountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        state:
          type: string
          nullable: true
          title: State (optional)
          maxLength: 50
        city:
          type: string
          nullable: true
          title: City (optional)
          maxLength: 50
        postal_code:
          type: integer
          nullable: true
          title: Postal Code (optional)
      required:
      - confirm_password
      - contact_number
      - dob
      - email
      - first_name
      - gender
      - id
      - last_name
      - password
      - profile_picture
      - unique_id
    PatientsCountryEnum:
      enum:
      - UZ
      - KR
      - KZ
      - RU
      type: string
      description: |-
        * `UZ` - Uzbekistan
        * `KR` - Karakalpakistan
        * `KZ` - Kazakhstan
        * `RU` - Russia
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Services:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of the service
          maxLength: 50
        short_description:
          type: string
        icon:
          type: string
          format: uri
        status:
          type: boolean
        category:
          type: integer
        doctors:
          type: integer
      required:
      - category
      - doctors
      - icon
      - id
      - name
      - short_description
    ServicesCategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of the category of the service
          maxLength: 100
      required:
      - id
      - name
    Specializations:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Staffs:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        contact_number:
          type: string
          nullable: true
          title: Contact Number (optional)
          maxLength: 13
        password:
          type: string
          nullable: true
          maxLength: 20
        confirm_password:
          type: string
          nullable: true
          title: Confirm Pasword
          maxLength: 20
        gender:
          $ref: '#/components/schemas/GenderEnum'
        profile_picture:
          type: string
          format: uri
        role:
          type: integer
      required:
      - email
      - first_name
      - gender
      - id
      - last_name
      - profile_picture
      - role
    StaffsRoles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Staff Role
          maxLength: 50
      required:
      - id
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
    Visits:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        visit_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
          title: Description (optional)
        doctor:
          type: integer
        patient:
          type: integer
      required:
      - doctor
      - id
      - patient
      - visit_date
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
